---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: sample-app
    spec:
      replicas: 3
      selector:
        matchLabels:
          app: nginx
      template:
        metadata:
          labels:
            app: nginx
        spec:
          containers:
          - name: app
            image: centos
            command: ["/bin/sh"]
            args: ["-c", "while true; do echo $(date -u) >> /data/out; sleep 5; done"]
            volumeMounts:
              - name: persistent-storage
                mountPath: /data
              - name: persistent-storage2
                mountPath: /logs
          volumes:
            - name: persistent-storage
              persistentVolumeClaim:
                claimName: efs-claim1
            - name: persistent-storage2
              persistentVolumeClaim:
                claimName: efs-claim2
    ---
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: efs-claim1
    spec:
      accessModes:
        - ReadWriteMany
      storageClassName: <efs-sc>
      resources:
        requests:
          storage: 5Gi
    ---
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: <efs-sc>
    spec:
      accessModes:
        - ReadWriteMany
      storageClassName: <efs-sc>
      resources:
        requests:
          storage: 5Gi
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: <efs-sc>
provisioner: efs.csi.aws.com
parameters:
  provisioningMode: efs-ap
  fileSystemId: fs-xxxxxxxxxxx
  directoryPerms: "700"
  gidRangeStart: "1000" # optional
  gidRangeEnd: "2000" # optional
  basePath: "/data" # optional
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: <efs-sc>
provisioner: efs.csi.aws.com
parameters:
  provisioningMode: efs-ap
  fileSystemId: fs-xxxxxxxxxxx
  directoryPerms: "700"
  gidRangeStart: "1000" # optional
  gidRangeEnd: "2000" # optional
  basePath: "/logs" # optional
